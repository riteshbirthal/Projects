# We will use method of Overriding

# Biggest advantage of using this way of creating threads?
# Ams: You can access data generated by threads


from threading import Thread
from time import sleep

videos = ['Video 1', 'Video 2', 'Video 3', 'Video 4']


class MyClass(Thread):
    def __init__(self, val):
        print("Constructor called..")
        self.kid=val
        # can also use super method
        Thread.__init__(self) # require this ... explaination 1
        
    def compression(self):
        print("Video compression..")
    
    def run(self):
        self.compression()
        if self.kid:
            print("Suitable for kids")
        for vid in videos:
            print(f"{vid} started uploading....")
            sleep(1)
            print(f"{vid} uploaded.")
        a, b = 10, 20
        self.temp = a+b
            
            
t1 = MyClass(False)
t1.start()
sleep(10)
# accessing data created by threads
print("result is: ", t1.temp)

for i in range(4):
    sleep(0.5)
    print("Checking copyrights")
    

# Explaination 1: If Thread__init(self) is not called then it will throw error,
#                 it is required to call constructor of Thread class, as some variables
#                 are going to initialized there, those variables are used to make thread